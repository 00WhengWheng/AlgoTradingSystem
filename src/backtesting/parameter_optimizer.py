# src/backtesting/parameter_optimizer.py

from backtesting.backtester import Backtester
import numpy as np

def optimize_parameters(data, signals, param_grid, initial_capital=10000, transaction_cost=0.001):
    """
    Optimizes parameters by testing each combination and recording performance.

    Parameters:
    - data (pd.DataFrame): Historical price data.
    - signals (pd.Series): Trading signals generated by the strategy.
    - param_grid (dict): Dictionary with parameter names as keys and lists of values to test.
    """
    best_params = None
    best_sharpe = -np.inf
    
    for params in param_grid:
        backtester = Backtester(data, signals, initial_capital=initial_capital, transaction_cost=params['transaction_cost'])
        results = backtester.run_backtest()
        metrics = backtester.get_performance_metrics()
        
        if metrics['Sharpe Ratio'] > best_sharpe:
            best_sharpe = metrics['Sharpe Ratio']
            best_params = params
    
    print(f"Best Sharpe Ratio: {best_sharpe}")
    print(f"Best Parameters: {best_params}")
